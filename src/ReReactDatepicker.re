[%bs.raw {|require('react-datepicker/dist/react-datepicker.css')|}];
[%bs.raw {|require('re-react-datepicker/src/re-react-datepicker.css')|}];

open MomentRe;

[@bs.obj]
external makeProps :
  (
    ~selected: Moment.t,
    ~onChange: Moment.t => unit,
    ~onBlur: Moment.t => unit=?,
    ~showTimeSelect: bool=?,
    ~showTimeSelectOnly: bool=?,
    ~dateFormat: string=?,
    ~excludeTimes: array(Moment.t)=?,
    ~includeTimes: array(Moment.t)=?,
    ~injectTimes: array(Moment.t)=?,
    ~minTime: Moment.t=?,
    ~maxTime: Moment.t=?,
    ~timeCaption: string=?,
    ~timeFormat: string=?,
    ~timeIntervals: int=?,
    ~todayButton: string=?,
    ~className: string=?,
    ~calendarClassName: string=?,
    ~dayClassName: string=?,
    ~utcOffset: int=?,
    ~placeholderText: string=?,
    ~locale: string=?,
    ~highlightDates: array(Moment.t)=?,
    ~includeDates: array(Moment.t)=?,
    ~filterDate: Moment.t=?,
    ~startDate: Moment.t=?,
    ~endDate: Moment.t=?,
    ~selectsStart: bool=?,
    ~selectsEnd: bool=?,
    ~disabled: bool=?,
    ~disabledKeyboardNavigation: bool=?,
    ~isClearable: bool=?,
    ~withPortal: bool=?,
    ~inline: bool=?,
    ~popperClassName: string=?,
    ~popperPlacement: string=?,
    ~popperModifiers: {
                        .
                        "offset": {
                          .
                          "enabled": bool,
                          "offset": string,
                        },
                        "preventOverflow": {
                          .
                          "enabled": bool,
                          "escapeWithReference": bool,
                          "boundariesElement": string,
                        },
                      }
                        =?,
    ~tabIndex: int=?,
    ~scrollableYearDropdown: bool=?,
    ~yearDropdownItemNumber: int=?,
    ~showMonthDropdown: bool=?,
    ~useShortMonthInDropdown: bool=?,
    ~dropdownMode: string=?,
    ~openToDate: Moment.t=?,
    ~fixedHeight: bool=?,
    ~showWeekNumbers: bool=?,
    ~monthsShown: int=?,
    ~showYearDropdown: bool=?,
    ~shouldCloseOnSelect: bool=?,
    ~autoFocus: bool=?,
    unit
  ) =>
  _ =
  "";

[@bs.module "react-datepicker"]
external datePickerAbs : ReasonReact.reactClass = "default";

let datePicker = ReasonReact.statelessComponent("DatePicker");

let make =
    (
      ~selected,
      ~onChange,
      ~onBlur=?,
      ~showTimeSelect=?,
      ~showTimeSelectOnly=?,
      ~dateFormat=?,
      ~excludeTimes=?,
      ~includeTimes=?,
      ~injectTimes=?,
      ~minTime=?,
      ~maxTime=?,
      ~todayButton=?,
      ~timeCaption=?,
      ~timeFormat=?,
      ~timeIntervals=?,
      ~className=?,
      ~calendarClassName=?,
      ~dayClassName=?,
      ~utcOffset=?,
      ~placeholderText=?,
      ~locale=?,
      ~highlightDates=?,
      ~includeDates=?,
      ~filterDate=?,
      ~startDate=?,
      ~endDate=?,
      ~selectsStart=?,
      ~selectsEnd=?,
      ~disabled=?,
      ~disabledKeyboardNavigation=?,
      ~isClearable=?,
      ~withPortal=?,
      ~inline=?,
      ~popperClassName=?,
      ~popperPlacement=?,
      ~popperModifiers=?,
      ~tabIndex=?,
      ~scrollableYearDropdown=?,
      ~yearDropdownItemNumber=?,
      ~showMonthDropdown=?,
      ~useShortMonthInDropdown=?,
      ~dropdownMode=?,
      ~openToDate=?,
      ~fixedHeight=?,
      ~showWeekNumbers=?,
      ~monthsShown=?,
      ~showYearDropdown=?,
      ~shouldCloseOnSelect=?,
      ~autoFocus=?,
      children,
    ) => {
  ...datePicker,
  render: _self =>
    ReasonReact.element(
      ReasonReact.wrapJsForReason(
        ~reactClass=datePickerAbs,
        ~props=
          makeProps(
            ~selected,
            ~onChange,
            ~onBlur?,
            ~showTimeSelect?,
            ~showTimeSelectOnly?,
            ~dateFormat?,
            ~excludeTimes?,
            ~includeTimes?,
            ~injectTimes?,
            ~minTime?,
            ~maxTime?,
            ~todayButton?,
            ~timeCaption?,
            ~timeFormat?,
            ~timeIntervals?,
            ~className?,
            ~calendarClassName?,
            ~dayClassName?,
            ~utcOffset?,
            ~placeholderText?,
            ~locale?,
            ~highlightDates?,
            ~includeDates?,
            ~filterDate?,
            ~startDate?,
            ~endDate?,
            ~selectsStart?,
            ~selectsEnd?,
            ~disabled?,
            ~disabledKeyboardNavigation?,
            ~isClearable?,
            ~withPortal?,
            ~inline?,
            ~popperClassName?,
            ~popperPlacement?,
            ~popperModifiers?,
            ~tabIndex?,
            ~scrollableYearDropdown?,
            ~yearDropdownItemNumber?,
            ~showMonthDropdown?,
            ~useShortMonthInDropdown?,
            ~dropdownMode?,
            ~openToDate?,
            ~fixedHeight?,
            ~showWeekNumbers?,
            ~monthsShown?,
            ~showYearDropdown?,
            ~shouldCloseOnSelect?,
            ~autoFocus?,
            (),
          ),
        children,
      ),
    ),
};
